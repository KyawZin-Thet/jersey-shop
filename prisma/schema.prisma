// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id         Int        @id @default(autoincrement())
  name       String
  street     String
  township   String
  city       String
  products   Products[]
  users      User[]
  isArchived Boolean    @default(false)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Leagues {
  id         Int         @id @default(autoincrement())
  name       String
  assetUrl   String?
  isArchived Boolean     @default(false)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  clubTeams  ClubTeams[]
}

model InternationalTeams {
  id       Int     @id @default(autoincrement())
  name     String
  assetUrl String?

  isArchived Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model ClubTeams {
  id       Int     @id @default(autoincrement())
  name     String
  assetUrl String?
  leagueId Int
  leagues  Leagues @relation(fields: [leagueId], references: [id])

  isArchived Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model ProductTypes {
  id         Int      @id @default(autoincrement())
  name       String
  assetUrl   String?
  isArchived Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Products {
  id            Int      @id @default(autoincrement())
  name          String
  assetUrl      String
  isBestSeller  Boolean
  teamId        Int
  companyId     Int
  company       Company  @relation(fields: [companyId], references: [id])
  productTypeId Int
  addons        Addons[]
}

model Addons {
  id         Int      @id @default(autoincrement())
  kits       String?
  number     Int?
  type       String?
  productId  Int
  products   Products @relation(fields: [productId], references: [id])
  isArchived Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Order      Order[]
}

model Order {
  id          Int         @id @default(autoincrement())
  address     String
  phoneNumber String
  addonId     Int
  quantity    Int
  orderSeq    String
  itemId      String
  status      ORDERSTATUS
  totalPrice  Int
  isArchived  Boolean     @default(false)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  addon       Addons?     @relation(fields: [addonId], references: [id])
}

model User {
  id        Int     @id @default(autoincrement())
  email     String
  name      String?
  companyId Int
  company   Company @relation(fields: [companyId], references: [id])
}

enum ORDERSTATUS {
  PENDING
  INPROCESS
  COMPLETE
}
